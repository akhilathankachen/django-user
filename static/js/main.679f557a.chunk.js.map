{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["fetchRandomData","axios","get","then","data","catch","err","console","log","App","useState","userInfos","setUserInfos","email","setEmail","fist_name","setFistName","last_name","setLastName","pwd","setPwd","username","setUserName","email2","setEmail2","useEffect","randomData","className","Container","map","userInfo","idx","Card","firstname","lastname","onSubmit","e","preventDefault","fetch","method","body","JSON","stringify","response","json","Response","alert","htmlFor","type","name","value","placeholder","onChange","target","style","backgroundColor","borderRadius","marginTop","marginLeft","fontSize","alignSelf","dum","temp","existingUsers","x","splice","onClick","padding","justifyContent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAmBMA,EAAkB,WACvB,OAAQC,IAAMC,IAAI,kDAChBC,MAAK,YACJ,OADc,EAARC,QAGPC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAID,SAASG,IACtB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAiCJ,mBAAS,IAA1C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAiCN,mBAAS,IAA1C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAsBR,mBAAS,IAA/B,mBAAOS,EAAP,KAAYC,EAAZ,KACA,EAAgCV,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAA4BZ,mBAAS,IAArC,mBAAOa,EAAP,KAAeC,EAAf,KA0EA,OAPAC,qBAAU,WACNzB,IAAkBG,MAAK,SAACuB,GACxBd,EAAac,QAGd,IAGD,gCACE,oBAAIC,UAAU,YAAd,sCACA,cAACC,EAAA,EAAD,CAAWD,UAAU,iBAArB,SACGhB,EAAUkB,KAAI,SAACC,EAAoBC,GAArB,OACb,8BACE,cAACC,EAAA,EAAD,CAAML,UAAU,cAAhB,SACC,+BAAKG,EAASf,UAAWe,EAASG,UAAW,IAAKH,EAASI,SAAUJ,EAASb,gBAFvEc,QAQd,sBAAKJ,UAAU,uBAAf,UACA,uBAAMA,UAAU,iBAAiBQ,SAxCxB,SAAAC,GACbA,EAAEC,iBACFC,MAAM,gDAAiD,CACrDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAE7B,QAAOE,YAAWE,YAAWE,MAAKE,eAE1DlB,MAAK,SAACwC,GACL,OAAOA,EAASC,UAGjBzC,MAAK,SAAC0C,GAEL,OADAC,MAAML,KAAKC,UAAUG,EAAU,KAAM,IAC9B7C,IAAkBG,MAAK,SAACuB,GAC7Bd,EAAac,SAGhBrB,OAAM,kBAAIyC,MAAM,0BAwBb,UACE,0CACA,oBAAIC,QAAQ,QAAZ,mBACA,uBACEC,KAAK,QACLC,KAAK,QACLC,MAAOrC,EACPsC,YAAY,kBACZC,SAAU,SAAAhB,GAAC,OAAItB,EAASsB,EAAEiB,OAAOH,UAEnC,oBAAIH,QAAQ,YAAZ,wBACA,uBACEE,KAAK,YACLC,MAAOnC,EACPoC,YAAY,yBACZC,SAAU,SAAAhB,GAAC,OAAEpB,EAAYoB,EAAEiB,OAAOH,UAGpC,oBAAIH,QAAQ,YAAZ,uBACA,uBACEE,KAAK,YACLC,MAAOjC,EACPkC,YAAY,uBACZC,SAAU,SAAAhB,GAAC,OAAElB,EAAYkB,EAAEiB,OAAOH,UAGpC,oBAAIH,QAAQ,MAAZ,sBACA,uBACEC,KAAK,WACLC,KAAK,MACLC,MAAO/B,EACPgC,YAAY,kBACZC,SAAU,SAAAhB,GAAC,OAAEhB,EAAOgB,EAAEiB,OAAOH,UAG/B,oBAAIH,QAAQ,WAAZ,sBACA,uBACEE,KAAK,WACLC,MAAO7B,EACP8B,YAAY,uBACZC,SAAU,SAAAhB,GAAC,OAAEd,EAAYc,EAAEiB,OAAOH,UAEpC,uBACA,wBAAQI,MAAO,CACbC,gBAAiB,gBACjBC,aAAc,MACdC,UAAW,OACXC,WAAY,OACZC,SAAU,OACVC,UAAW,UACVZ,KAAK,SAPR,yBASF,sBAAKrB,UAAU,kBAAf,UACA,uBAAMA,UAAU,cAAcQ,SApIjB,SAAAC,GACjBA,EAAEC,iBACFC,MAAM,wDAAyD,CAC7DC,OAAQ,SACRC,KAAMC,KAAKC,UAAU,CAACnB,aAEvBpB,MAAK,SAACwC,GACH,OAAOA,EAASC,UAEnBzC,MAAK,SAAC0C,GACL,IACIgB,EADAC,GAAO,EAEPC,EAAgBpD,EACpB,IAAI,IAAIqD,KAAKD,EACX,GAAGA,EAAcC,GAAd,QAA8BzC,EAAO,CACtCuC,GAAK,EACLD,EAAIG,EACJ,MAIJ,GAAGF,EACD,OAAO9D,IAAkBG,MAAK,SAACuB,GAC7BA,EAAWuC,OAAOJ,EAAI,GACtBjD,EAAac,GAEboB,MAAML,KAAKC,UADD,CAAC,OAAU,UAAW,QAAW,8BACjB,KAAK,OAIjCI,MAAML,KAAKC,UAAUG,EAAU,KAAK,IAEtC7C,IAAkBG,MAAK,SAACuB,GACtBd,EAAac,SAGhBrB,OAAM,kBAAIyC,MAAM,0BAgGb,UACE,6CACA,oBAAIC,QAAQ,SAAZ,mBACA,uBAEEE,KAAK,SACLC,MAAO3B,EACP4B,YAAY,eACZC,SAAU,SAAAhB,GAAC,OAAIZ,EAAUY,EAAEiB,OAAOH,UAEpC,uBACA,wBAAQI,MAAO,CACbC,gBAAiB,gBACjBC,aAAc,MACdC,UAAW,OACXC,WAAY,OACZC,SAAU,OACVC,UAAW,UACVZ,KAAK,SAPR,4BASF,uBACA,wBAAQkB,QAAS,WA/JZlE,IAAkBG,MAAK,SAACuB,GAC7Bd,EAAac,GACboB,MAAM,iCAgKNQ,MAAO,CACHC,gBAAiB,gBACjBC,aAAc,MACdE,WAAY,QACZC,SAAU,OACVC,UAAW,SACXO,QAAS,OACTC,eAAgB,UAVpB,0CCtMN,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpE,MAAK,YAAkD,IAA/CqE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACtE,EAAD,MAEFuE,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.679f557a.chunk.js","sourcesContent":["import './stylsheets/Main.css';\r\nimport {React, useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Card } from '@material-ui/core';\r\nimport {Container} from 'reactstrap';\r\n\r\ninterface UserName {\r\n  $oid: string,\r\n}\r\ninterface UserInfo {\r\n  _id: UserName;\r\n  email: String;\r\n  fist_name: String;\r\n  lastname: string;\r\n  firstname: String;\r\n  last_name: String;\r\n  username: String;\r\n}\r\n\r\nconst fetchRandomData = ()=>{\r\n return  axios.get('http://3.6.93.159:7883/machstatz/get_all_users')\r\n  .then(({data})=>{\r\n    return data;\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n} \r\n\r\nexport default function App(){\r\n  const [userInfos, setUserInfos] = useState([]);\r\n  const [email, setEmail] = useState('');\r\n  const [fist_name, setFistName] = useState('');\r\n  const [last_name, setLastName] = useState('');\r\n  const [pwd, setPwd] = useState('');\r\n  const [username, setUserName] = useState('');\r\n  const [email2, setEmail2] = useState('');\r\n\r\n  const fetchDataDynamically = () => {\r\n   return  fetchRandomData().then((randomData)=>{\r\n      setUserInfos(randomData);\r\n      alert(\"Data Fetched Successfully\");\r\n  });\r\n  }\r\n\r\nconst deleteUser = e => {\r\n  e.preventDefault()\r\n  fetch(`http://3.6.93.159:7883/machstatz/delete_existing_user`, {\r\n    method: 'DELETE',\r\n    body: JSON.stringify({email2}),\r\n  })\r\n  .then((response)=>{\r\n      return response.json(); \r\n  })\r\n  .then((Response)=>{\r\n    var temp = false;\r\n    var dum;\r\n    var existingUsers = userInfos;\r\n    for(let x in existingUsers){\r\n      if(existingUsers[x]['email'] === email2){\r\n        temp=true;\r\n        dum=x;\r\n        break;\r\n    }\r\n    }\r\n    \r\n    if(temp){\r\n      return fetchRandomData().then((randomData)=>{\r\n        randomData.splice(dum,1);\r\n        setUserInfos(randomData);\r\n        var res = {\"status\": \"Deleted\", \"message\": \"User deleted successfully.\"};\r\n        alert(JSON.stringify(res, null,2));\r\n      });\r\n    }\r\n    else {\r\n      alert(JSON.stringify(Response, null,2));\r\n    } \r\n    fetchRandomData().then((randomData)=>{\r\n      setUserInfos(randomData);\r\n    });\r\n  })\r\n  .catch(()=>alert(\"There was an error\"));\r\n}  \r\n\r\nconst submit = e => {\r\n  e.preventDefault()\r\n  fetch(`http://3.6.93.159:7883/machstatz/add_new_user`, {\r\n    method: 'POST',\r\n    body: JSON.stringify({ email, fist_name, last_name, pwd, username }),\r\n  })\r\n  .then((response)=> {\r\n    return response.json();\r\n\r\n  })\r\n  .then((Response)=>{\r\n    alert(JSON.stringify(Response, null, 2));\r\n    return fetchRandomData().then((randomData)=>{\r\n      setUserInfos(randomData);\r\n    });\r\n  })\r\n  .catch(()=>alert(\"There was an error\"));\r\n  }\r\n\r\n  useEffect(()=>{\r\n      fetchRandomData().then((randomData)=>{\r\n      setUserInfos(randomData);\r\n    });\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"headerTop\">Fetched Random user Data</h1>\r\n      <Container className=\"container-grid\">\r\n        {userInfos.map((userInfo: UserInfo, idx: number)=>(\r\n          <div key={idx} >\r\n            <Card className=\"inside-card\">\r\n             <h4>{userInfo.fist_name}{userInfo.firstname}{' '}{userInfo.lastname}{userInfo.last_name}</h4>\r\n            </Card>\r\n          </div>\r\n            ))}\r\n      </Container>\r\n      \r\n      <div className=\"form-container-block\">\r\n      <form className=\"form-container\" onSubmit={submit}>\r\n        <h3>ADD USER</h3>\r\n        <h4 htmlFor=\"email\">Email</h4>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          placeholder=\"*Enter Email Id\"\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <h4 htmlFor=\"fist_name\">First Name</h4>\r\n        <input\r\n          name=\"fist_name\"\r\n          value={fist_name}\r\n          placeholder=\"*Enter your First Name\"\r\n          onChange={e=>setFistName(e.target.value)}\r\n          />\r\n\r\n        <h4 htmlFor=\"last_name\">Last Name</h4>\r\n        <input\r\n          name=\"last_name\"\r\n          value={last_name}\r\n          placeholder=\"Enter your Last Name\"\r\n          onChange={e=>setLastName(e.target.value)}\r\n          />\r\n      \r\n        <h4 htmlFor=\"pwd\">Password</h4>\r\n        <input\r\n          type=\"password\"\r\n          name=\"pwd\"\r\n          value={pwd}\r\n          placeholder=\"*Enter Password\"\r\n          onChange={e=>setPwd(e.target.value)}\r\n          />\r\n        \r\n        <h4 htmlFor=\"username\">Username</h4>\r\n        <input\r\n          name=\"username\"\r\n          value={username}\r\n          placeholder=\"*Enter your Username\"\r\n          onChange={e=>setUserName(e.target.value)}\r\n          />\r\n        <br />\r\n        <button style={{\r\n          backgroundColor: \"lightseagreen\",\r\n          borderRadius: \"5px\",\r\n          marginTop: \"15px\",\r\n          marginLeft: \"10px\",\r\n          fontSize: \"20px\",\r\n          alignSelf: \"bottom\",\r\n        }} type=\"submit\">Add User</button>\r\n      </form>\r\n      <div className=\"form-container2\">\r\n      <form className=\"delete-form\" onSubmit={deleteUser}>\r\n        <h3>DELETE USER</h3>\r\n        <h4 htmlFor=\"email2\">Email</h4>\r\n        <input\r\n          \r\n          name=\"email2\"\r\n          value={email2}\r\n          placeholder=\"*Enter Email\"\r\n          onChange={e => setEmail2(e.target.value)}\r\n        />\r\n        <br />\r\n        <button style={{\r\n          backgroundColor: \"lightseagreen\",\r\n          borderRadius: \"5px\",\r\n          marginTop: \"15px\",\r\n          marginLeft: \"10px\",\r\n          fontSize: \"20px\",\r\n          alignSelf: \"bottom\",\r\n        }} type=\"submit\">Delete User</button>\r\n      </form>\r\n      <br />\r\n      <button onClick={()=>{\r\n        fetchDataDynamically();\r\n      }}\r\n      style={{\r\n          backgroundColor: \"lightseagreen\",\r\n          borderRadius: \"5px\",\r\n          marginLeft: \"170px\",\r\n          fontSize: \"20px\",\r\n          alignSelf: \"bottom\",\r\n          padding: \"10px\",\r\n          justifyContent: \"center\",\r\n        }}>Reload Fetched Data</button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}